name: Build and Publish Container

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Kustomize manifests
        run: |
          # Install kustomize
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/
          
          echo "Validating Kustomize manifests..."
          echo "Checking base configuration..."
          kustomize build manifests/base > /dev/null
          echo "Checking development overlay..."
          kustomize build manifests/overlays/development > /dev/null
          echo "Checking staging overlay..."
          kustomize build manifests/overlays/staging > /dev/null
          echo "Checking production overlay..."
          kustomize build manifests/overlays/production > /dev/null
          echo "All manifests are valid!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container (comprehensive validation)
        if: github.event_name == 'pull_request'
        run: |
          docker build -t test-container .
          echo "Running comprehensive container validation..."
          docker run --rm test-container /bin/bash -c "
            echo 'Testing database clients...' &&
            psql --version &&
            mysql --version &&
            redis-cli --version &&
            mongosh --version &&
            echo 'Database clients: OK' &&
            echo 'Testing network tools...' &&
            ping -c 1 127.0.0.1 > /dev/null && echo 'ping: OK' &&
            nc -h 2>&1 | head -1 &&
            dig -v 2>&1 | head -1 &&
            echo 'Network tools: OK' &&
            echo 'Testing development tools...' &&
            python3 --version &&
            git --version &&
            nodejs --version &&
            jq --version &&
            echo 'Development tools: OK' &&
            echo 'Testing system tools...' &&
            htop --version 2>&1 | head -1 &&
            curl --version | head -1 &&
            wget --version | head -1 &&
            echo 'System tools: OK' &&
            echo 'Testing custom scripts...' &&
            test-network --help > /dev/null && echo 'test-network: OK' &&
            test-db-connection --help > /dev/null && echo 'test-db-connection: OK' &&
            test-rabbitmq --help > /dev/null && echo 'test-rabbitmq: OK' &&
            debug-demo | head -3 > /dev/null && echo 'debug-demo: OK' &&
            echo 'All container tools validated successfully!'
          "